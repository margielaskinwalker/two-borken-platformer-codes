import pygame
import random
pygame.init()

screen = pygame.display.set_mode((800,800))
screen.fill((0,0,0))
clock = pygame.time.Clock()

doExit = False
playerx = 0
playery = 0
xVel = 0
yVel = 0
playerSize = 20
keys = [False, False, False, False]
colX = False
colY = False

map = [[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0 ,0 ,0, 0],
       [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0 ,0 ,0, 0],
       [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0 ,0 ,0, 0],
       [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0 ,0 ,0, 0],
       [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0 ,0 ,0, 0],
       [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0 ,0 ,0, 0],
       [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0 ,0 ,0, 0],
       [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0 ,0 ,0, 0],
       [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0 ,0 ,0, 0],
       [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0 ,0 ,0, 0],
       [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0 ,0 ,0, 0],
       [0, 0, 2, 2, 2, 0, 0, 0, 0, 0, 0, 0, 0 ,0 ,0, 0],
       [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0 ,0 ,0, 0],
       [1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 2, 0, 0 ,0 ,0, 0],
       [1, 1, 0, 0, 0, 0, 0, 0, 0, 2, 2, 0, 0 ,0 ,0, 0],
       [1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1 ,1 ,1, 1]]


class platform:
    def __init__(self, x, y):
        self.xpos = x
        self.ypos = y
        self.width = 100
        self.height = 10
        self.red = random.randint(0,255)
        self.blue = random.randint(0,255)
        self.green = random.randint(0,255)
    def collide(self, px, py):
        if (playerx) < (self.xpos + self.width) and (playerx + playerSize) > (self.xpos) and xVel != 0 and (playery) < (self.ypos + self.height) and (playery + playerSize) > (self.ypos) and yVel != 0:
            #xVel = 0
            colX = True
            colY = True
            print ("bruh")
        #if (playery) < (self.ypos + self.height) and (playery + playerSize) > (self.ypos) and yVel != 0:
            #yVel = 0
            #colY = True

    def draw(self):
        pygame.draw.rect(screen, (self.red,self.green,self.blue), (self.xpos,self.ypos, self.width, self.height))
p1 = platform(400, 400)
while doExit == False:
    clock.tick(60)
    p1.collide(playerx, playery)
    for event in pygame.event.get(): #quit game if x is pressed in top corner
        if event.type == pygame.QUIT:
            gameover = True
     
        if event.type == pygame.KEYDOWN: #keyboard input
            if event.key == pygame.K_LEFT:
                keys[0]=True
            elif event.key == pygame.K_RIGHT:
                keys[1]=True
            elif event.key == pygame.K_UP:
                keys[2]=True
            elif event.key == pygame.K_DOWN:
                keys[3]=True
        if event.type == pygame.KEYUP:
           if event.key == pygame.K_LEFT:
                keys[0]=False
           elif event.key == pygame.K_RIGHT:
                keys[1]=False
           elif event.key == pygame.K_UP:
                keys[2]=False
           elif event.key == pygame.K_DOWN:
                keys[3]=False

    if keys[0]==True and colX == False:
        xVel=-3
        direction = 0
    elif keys[1] == True and colX == False:
        xVel = 3
        direction = 1
    else:
        xVel = 0
    if keys[2] == True and colY == False:
        yVel = -3
        direction = 2
    elif keys[3] == True and colY == False:
        yVel = 3
        direction = 3
    else:
        yVel = 0
    if (playery + playerSize) > 800:
        yVel = 0
    else:
        yVel = 1
    playerx += xVel
    playery += yVel
    screen.fill((0,0,0))
    p1.draw()
    pygame.draw.rect(screen, (255,255,255), (playerx, playery, 20, 20))
    pygame.display.flip()
